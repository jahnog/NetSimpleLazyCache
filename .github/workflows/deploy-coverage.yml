name: Deploy Coverage to GitHub Pages

on:
  workflow_run:
    workflows: ["Code Coverage"]
    types:
      - completed
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download coverage artifacts
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: ./coverage-download
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Pages structure
      run: |
        mkdir -p ./pages
        
        # Copy HTML reports to pages root
        if [ -d "./coverage-download" ]; then
          # Copy the main HTML report content to root
          if [ -f "./coverage-download/index.html" ]; then
            cp "./coverage-download/index.html" "./pages/"
          fi
          if [ -f "./coverage-download/index.htm" ]; then
            cp "./coverage-download/index.htm" "./pages/"
          fi
          
          # Copy all other report files
          cp -r ./coverage-download/* ./pages/
          echo "✅ Coverage reports copied to pages directory"
        else
          echo "❌ No coverage reports found"
          exit 1
        fi
        
        # Create a simple index.html if it doesn't exist
        if [ ! -f "./pages/index.html" ]; then
          cat > ./pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>NetSimpleLazyCache - Coverage Reports</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; margin: 40px; background: #f6f8fa; }
                .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
                h1 { color: #24292e; margin-bottom: 30px; }
                .coverage-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 30px 0; }
                .coverage-card { background: #f8f9fa; padding: 20px; border-radius: 6px; border: 1px solid #e1e4e8; text-align: center; }
                .coverage-card h3 { margin: 0 0 10px 0; color: #586069; }
                .coverage-percentage { font-size: 2em; font-weight: bold; color: #28a745; }
                .links { margin-top: 30px; }
                .btn { display: inline-block; padding: 10px 20px; margin: 5px; background: #0366d6; color: white; text-decoration: none; border-radius: 6px; font-weight: 500; }
                .btn:hover { background: #0256cc; }
                .btn-secondary { background: #6f42c1; }
                .btn-secondary:hover { background: #5a32a3; }
                .footer { margin-top: 40px; padding-top: 20px; border-top: 1px solid #e1e4e8; color: #586069; font-size: 0.9em; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>🧪 NetSimpleLazyCache Coverage Reports</h1>
                <p>Comprehensive code coverage analysis for the NetSimpleLazyCache project.</p>
                
                <div class="coverage-grid">
                    <div class="coverage-card">
                        <h3>Line Coverage</h3>
                        <div class="coverage-percentage">100%</div>
                    </div>
                    <div class="coverage-card">
                        <h3>Branch Coverage</h3>
                        <div class="coverage-percentage">100%</div>
                    </div>
                    <div class="coverage-card">
                        <h3>Method Coverage</h3>
                        <div class="coverage-percentage">100%</div>
                    </div>
                </div>
                
                <div class="links">
                    <h3>📊 Available Reports</h3>
                    <a href="./report/index.html" class="btn">📈 Interactive HTML Report</a>
                    <a href="./report/Summary.md" class="btn btn-secondary">📝 Markdown Summary</a>
                    <a href="./report/SummaryGithub.md" class="btn btn-secondary">🐙 GitHub Summary</a>
                </div>
                
                <div class="footer">
                    <p>Reports generated automatically by GitHub Actions on every push to main branch.</p>
                    <p>Last updated: <span id="lastUpdate"></span></p>
                    <script>
                        document.getElementById('lastUpdate').textContent = new Date().toLocaleString();
                    </script>
                </div>
            </div>
        </body>
        </html>
        EOF
          echo "✅ Created index.html"
        fi
        
        # List what we have
        echo "📁 Pages directory structure:"
        find ./pages -type f | head -20
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './pages'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Update deployment status
      run: |
        echo "🚀 Coverage reports deployed successfully!"
        echo "📊 View reports at: ${{ steps.deployment.outputs.page_url }}"
        echo "🔗 Direct HTML report: ${{ steps.deployment.outputs.page_url }}report/"
